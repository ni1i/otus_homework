# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :inetRouter => {
        :box_name => "centos/7",        
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "router"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "router"},
                ]
  },
  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "router"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "router"},                   
                ]
  },
  :office1Router => {
        :box_name => "centos/7",
        :net => [
                  {ip: '192.168.1.1', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "o1"}                  
                ]
  },
  :testServer1 => {
        :box_name => "centos/7",
        :net => [
                  {ip: '192.168.1.2', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "o1"},
                  {ip: '10.10.10.1', adapter: 3, netmask: "255.255.255.192", virtualbox__intnet: "testLAN"}
                ]                
  },
  :testClient1 => {
        :box_name => "centos/7",
        :net => [
                  {ip: '192.168.1.3', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "o1"},
                  {ip: '10.10.10.254', adapter: 3, netmask: "255.255.255.192", virtualbox__intnet: "testLAN"}
                ]
  },              
  :testServer2 => {
        :box_name => "centos/7",
        :net => [
                  {ip: '192.168.1.4', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "o1"},
                  {ip: '10.10.10.1', adapter: 3, netmask: "255.255.255.192", virtualbox__intnet: "testLAN"}
                ]
  },
  :testClient2 => {
        :box_name => "centos/7",
        :net => [
                  {ip: '192.168.1.5', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "o1"},
                  {ip: '10.10.10.254', adapter: 3, netmask: "255.255.255.192", virtualbox__intnet: "testLAN"}
                ]                
  }
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end

        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL

        box.vm.provision "ansible", playbook: "playbook.yml"

    end
  end
end